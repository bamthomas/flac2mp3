{"google":"","body":"# Description\r\nThis is 1 utility scripts (in `src/main`) for transcoding flac files into mp3 files keeping covers, tags, and directory structure. It is multithreaded and creates as much thread as the number of cores on the host.\r\n\r\nThe flac tags will be added to the mp3 files ut8 encoded, and if a cover.jpg file is found in the flac files directory it will be added to the mp3.\r\n\r\nThe mp3 generated will be itunes compliant (accents, covers) and encoded with lame command : \r\n`lame --silent -V2 --vbr-new -q0 --lowpass 19.7 --resample 44100`\r\n\r\n# Why another flac2mp3 command ?\r\nBecause I didn't find one that included the cover and that did not break my accents on itunes. Cf http://www.barreverte.fr/ou-sont-mes-accents-dans-itunes (sorry, in french).\r\nSecond because I wanted it to be robust (for example with comments on multiple lines, shell caracters in tags like `!*$`) and unit tested.\r\n\r\n# Compatibility and dependencies\r\nIt has been tested with linux (with python version >= 2.6.2), MacOS (>= Snow Leopard). It should work with Windows (I'll test it soon).\r\n\r\nDepends on `lame` and `flac` for the runtime.\r\n\r\nDepends on `eyeD3` for unit testing and developing.\r\n\r\n## Lame\r\n\r\nIs a well known tool for encoding mp3 files. You can dowload and compile the code from the lame site : http://lame.sourceforge.net/\r\n\r\nBinaries bundles can be found for mac and windows : http://rarewares.org/mp3-lame-bundle.php\r\n\r\n## Flac\r\n\r\nIs a free and open lossless audio codec. There are links to dowload pages in the official site : http://flac.sourceforge.net/download.html\r\n\r\n# Usage\r\n`flac2mp3 [origin directories] mp3/repository/destination`\r\n\r\n- If one argument is given it is the destination : it will transcode flac files found under the current directory and put mp3 files in the destination directory with the same directory structure.\r\n- If more than one argument is given, it will transcode flac files from the given directories to the destination.\r\n\r\n\r\nfor example, if you have :\r\n\r\n    /path/to/flac/artist1/album1/song1.flac\r\n                 |              |song2.flac\r\n                 |              |song3.flac\r\n                 |              |cover.jpg\r\n                 |\r\n                 /artist2/album1/song1.flac\r\n                                |song2.flac\r\n                                |cover.jpg\r\n\r\n\r\n1) if you do in flac directory :\r\n$ `flac2mp3.py ../mp3`\r\n\r\nyou'll have : \r\n\r\n    /path/to/flac/artist1/album1/song1.flac\r\n            |    |              |song2.flac\r\n            |    |              |song3.flac\r\n            |    |              |cover.jpg\r\n            |    |\r\n            |    /artist2/album1/song1.flac\r\n            |                   |song2.flac\r\n            |                   |cover.jpg\r\n            |\r\n            /mp3/artist1/album1/song1.mp3\r\n                |              |song2.mp3\r\n                |              |song3.mp3\r\n                |\r\n                /artist2/album1/song1.mp3\r\n                               |song2.mp3\r\n\r\n2) if you do in flac directory : \r\n$ `flac2mp3.py artist2 ../mp3`\r\n\r\nyou'll have :\r\n\r\n    /path/to/flac/artist1/album1/song1.flac\r\n            |    |              |song2.flac\r\n            |    |              |song3.flac\r\n            |    |\r\n            |    /artist2/album1/song1.flac\r\n            |                   |song2.flac\r\n            |\r\n            /mp3/artist2/album1/song1.mp3\r\n                               |song2.mp3\r\n\r\nThis is a work in progress.\r\n\r\n# development\r\nTo develop and test, use your favorite IDE (mine is pycharm).\r\n\r\nWith bash to run the test you can do :\r\n`$ PYTHONPATH=src/main/:src/test/ python -m unittest flac2mp3_test flac2mp3_acceptance_test`\r\n\r\n","tagline":"Script that converts a directory with flac files into another with mp3 files keeping tags and images.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Flac2mp3"}